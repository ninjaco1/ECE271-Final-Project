|FinalProject
clk => clk.IN1
ltch => ~NO_FANOUT~
data => ~NO_FANOUT~
dataYellow => dataYellow.IN1
reset_n => reset_n.IN1
input_keyboard[0] => input_keyboard[0].IN1
input_keyboard[1] => input_keyboard[1].IN1
input_keyboard[2] => input_keyboard[2].IN1
input_keyboard[3] => input_keyboard[3].IN1
input_keyboard[4] => input_keyboard[4].IN1
input_keyboard[5] => input_keyboard[5].IN1
input_keyboard[6] => input_keyboard[6].IN1
input_keyboard[7] => input_keyboard[7].IN1
input_keyboard[8] => input_keyboard[8].IN1
input_keyboard[9] => input_keyboard[9].IN1
input_keyboard[10] => input_keyboard[10].IN1
led << <GND>
motor << <GND>
seg[0] << sevenseg:comb_8.port1
seg[1] << sevenseg:comb_8.port1
seg[2] << sevenseg:comb_8.port1
seg[3] << sevenseg:comb_8.port1
seg[4] << sevenseg:comb_8.port1
seg[5] << sevenseg:comb_8.port1
seg[6] << sevenseg:comb_8.port1


|FinalProject|NesReader:comb_3
dataYellow => dataYellow.IN1
clock => clock.IN1
reset_n => reset_n.IN2
latchOrange <= NesLatchStateDecoder:matt_i3.nesLatch
clockRed <= NesClockStateDecoder:matt_i2.nesClock
up <= NesDataReceiverDecoder:matt_i4.readButtons
down <= NesDataReceiverDecoder:matt_i4.readButtons
left <= NesDataReceiverDecoder:matt_i4.readButtons
right <= NesDataReceiverDecoder:matt_i4.readButtons
start <= NesDataReceiverDecoder:matt_i4.readButtons
select <= NesDataReceiverDecoder:matt_i4.readButtons
a <= NesDataReceiverDecoder:matt_i4.readButtons
b <= NesDataReceiverDecoder:matt_i4.readButtons


|FinalProject|NesReader:comb_3|Counter4:matt_i1
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
reset_n => count[0]~reg0.ACLR
reset_n => count[1]~reg0.ACLR
reset_n => count[2]~reg0.ACLR
reset_n => count[3]~reg0.ACLR
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|FinalProject|NesReader:comb_3|NesClockStateDecoder:matt_i2
controllerState[0] => Decoder0.IN3
controllerState[1] => Decoder0.IN2
controllerState[2] => Decoder0.IN1
controllerState[3] => Decoder0.IN0
nesClock <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|FinalProject|NesReader:comb_3|NesLatchStateDecoder:matt_i3
controllerState[0] => Equal0.IN7
controllerState[1] => Equal0.IN6
controllerState[2] => Equal0.IN5
controllerState[3] => Equal0.IN4
nesLatch <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|FinalProject|NesReader:comb_3|NesDataReceiverDecoder:matt_i4
dataYellow => readButtons[0]~reg0.DATAIN
dataYellow => readButtons[7]~reg0.DATAIN
dataYellow => readButtons[6]~reg0.DATAIN
dataYellow => readButtons[5]~reg0.DATAIN
dataYellow => readButtons[4]~reg0.DATAIN
dataYellow => readButtons[3]~reg0.DATAIN
dataYellow => readButtons[2]~reg0.DATAIN
dataYellow => readButtons[1]~reg0.DATAIN
reset_n => readButtons[0]~reg0.ACLR
reset_n => readButtons[1]~reg0.ACLR
reset_n => readButtons[2]~reg0.ACLR
reset_n => readButtons[3]~reg0.ACLR
reset_n => readButtons[4]~reg0.ACLR
reset_n => readButtons[5]~reg0.ACLR
reset_n => readButtons[6]~reg0.ACLR
reset_n => readButtons[7]~reg0.ACLR
controllerState[0] => Decoder0.IN3
controllerState[0] => readButtons[0]~reg0.CLK
controllerState[0] => readButtons[1]~reg0.CLK
controllerState[0] => readButtons[2]~reg0.CLK
controllerState[0] => readButtons[3]~reg0.CLK
controllerState[0] => readButtons[4]~reg0.CLK
controllerState[0] => readButtons[5]~reg0.CLK
controllerState[0] => readButtons[6]~reg0.CLK
controllerState[0] => readButtons[7]~reg0.CLK
controllerState[1] => Decoder0.IN2
controllerState[2] => Decoder0.IN1
controllerState[3] => Decoder0.IN0
readButtons[0] <= readButtons[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readButtons[1] <= readButtons[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readButtons[2] <= readButtons[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readButtons[3] <= readButtons[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readButtons[4] <= readButtons[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readButtons[5] <= readButtons[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readButtons[6] <= readButtons[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
readButtons[7] <= readButtons[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|FinalProject|NesDecoder:comb_4
nes_clk => ~NO_FANOUT~
nes_latch => ~NO_FANOUT~
a => select.IN0
a => comb.IN1
a => comb.IN1
b => select.IN1
select_button => ~NO_FANOUT~
select <= select$latch.DB_MAX_OUTPUT_PORT_TYPE
select_key <= <GND>


|FinalProject|keyboard_decoder:comb_5
input_keyboard[0] => ~NO_FANOUT~
input_keyboard[1] => ~NO_FANOUT~
input_keyboard[2] => ~NO_FANOUT~
input_keyboard[3] => ~NO_FANOUT~
input_keyboard[4] => ~NO_FANOUT~
input_keyboard[5] => ~NO_FANOUT~
input_keyboard[6] => ~NO_FANOUT~
input_keyboard[7] => ~NO_FANOUT~
input_keyboard[8] => ~NO_FANOUT~
input_keyboard[9] => ~NO_FANOUT~
input_keyboard[10] => ~NO_FANOUT~
clk => clk.IN1
ready => ~NO_FANOUT~
select => ~NO_FANOUT~
red[0] <= <GND>
red[1] <= <GND>
red[2] <= <GND>
red[3] <= <GND>
green[0] <= <GND>
green[1] <= <GND>
green[2] <= <GND>
green[3] <= <GND>
blue[0] <= <GND>
blue[1] <= <GND>
blue[2] <= <GND>
blue[3] <= <GND>


|FinalProject|keyboard_decoder:comb_5|PLL:pll
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|FinalProject|keyboard_decoder:comb_5|PLL:pll|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|FinalProject|keyboard_decoder:comb_5|PLL:pll|altpll:altpll_component|PLL_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|FinalProject|add_sub:comb_6
a[0] => a[0].IN1
a[1] => a[1].IN1
a[2] => a[2].IN1
a[3] => a[3].IN1
b[0] => b[0].IN1
b[1] => b[1].IN1
b[2] => b[2].IN1
b[3] => b[3].IN1
cin => cin.IN1
s[0] <= adder:comb_3.port3
s[1] <= adder:comb_3.port3
s[2] <= adder:comb_3.port3
s[3] <= adder:comb_3.port3
y[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cout <= adder:comb_3.port4


|FinalProject|add_sub:comb_6|adder:comb_3
a[0] => Add0.IN4
a[1] => Add0.IN3
a[2] => Add0.IN2
a[3] => Add0.IN1
b[0] => Add0.IN8
b[1] => Add0.IN7
b[2] => Add0.IN6
b[3] => Add0.IN5
cin => Add1.IN10
s[0] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
s[1] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
s[2] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
s[3] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|FinalProject|mux2:comb_7
d0[0] => y.DATAA
d0[1] => y.DATAA
d0[2] => y.DATAA
d0[3] => y.DATAA
d1[0] => y.DATAB
d1[1] => y.DATAB
d1[2] => y.DATAB
d1[3] => y.DATAB
s => y.OUTPUTSELECT
s => y.OUTPUTSELECT
s => y.OUTPUTSELECT
s => y.OUTPUTSELECT
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE


|FinalProject|sevenseg:comb_8
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


